using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using BepInEx.Logging;
using JetBrains.Annotations;
using ZeepSDK.Extensions;
using ZeepSDK.Level.Patches;
using ZeepSDK.Utilities;

namespace ZeepSDK.Level;

/// <summary>
/// An API for interacting with levels
/// </summary>
[PublicAPI]
public static class LevelApi
{
    private static readonly Dictionary<string, string> hashReplacements = new()
    {
        { "EA2391313B88D550A103B90CBE220B8E2EDA05EB", "EA2391313B88D550A103B90CBE220B8E2EDA05EB" }, // ea1
        { "669B9104C0BC56951D26BB2DCF79F5EBFCA55046", "669B9104C0BC56951D26BB2DCF79F5EBFCA55046" }, // ea2
        { "69403163E766B89B0354545C724FCEB1BB32916E", "69403163E766B89B0354545C724FCEB1BB32916E" }, // ea3
        { "ADD2B85F7CBAA7723754D0C7FE3566FF658318EF", "3C4C96E917FEFE88F1867F72FD144C4FCDB7A819" }, // ea4
        { "56B1927C4A6BD753558C431D617ECCD68BCF4A39", "2F6551106C2A82137CF7EE39FB71757DA38866A2" }, // ea5
        { "52688069FFB1CF1917483AD88A7EF8721EAC1DDC", "5D2C60C28457DAECAB6053F57E6C3741811E0108" }, // ea6
        { "1D533A335C3ABEF9E8ED44E420C40B2CDFF96ABC", "F83A085CCAC86BBD818BF3709CF2F55B593E4E83" }, // ea7
        { "9AAC82CD57C89AF428F4EEF06736060CA6D9E32F", "9AAC82CD57C89AF428F4EEF06736060CA6D9E32F" }, // ea8
        { "BFF4FAE03040C2934760A688838684CD61B58D70", "EE60251C23F58C5DAA88A02D389E53063FB68917" }, // ea9
        { "BE0A60037D8B9C1BFD9FA12F5BC3A48B9D2A9900", "4E087104919721821511182DB71E97D3B3A1BC94" }, // ea10
        { "4AB8927AA0F3C50408BAEAC87645D7CF2416D2FD", "A3974F5603CEE7FC5B10960319FEBBEA164F16AE" }, // ea11
        { "4C67A7CDBFDEE77BD60789CDD8E02D6DA19767EF", "D693E6F0F05C03889FE888245768902A608AC18B" }, // ea12
        { "F2FEF898E5BE62A2263D6C0F0DE199AF7F1C702F", "0BFCB9E11520C76BF505100E8B0F7805AF9480DF" }, // ea13
        { "AB447EEEEB65355FB20C6C649135F649D8C5DDE8", "CFBECE6F68A31646F390F598F98F3F40416CEA76" }, // ea14
        { "FE3414B0CBDA9BB7E221E6B2D23FA95E31EA7412", "FE3414B0CBDA9BB7E221E6B2D23FA95E31EA7412" }, // ea15
        { "F8B3E5D9366DB326A16AE6A76B8EA4A43E8130AD", "BCBE5966AB31DB8FEBBEF309AA34A6C85E102B5F" }, // ea16
        { "D95DBF4E323CE2E86218F59E3F95470D43440A43", "E75957DD2338CD103BB149DA542F45C52CDA82C4" }, // ea17
        { "4C2FC864C6DD7B73DBD42005C3201A84F65814A3", "738B5318003CF5D41F6AE41C11665192085D7DC6" }, // ea18
        { "F221302BA6C560F4812D9165BBC32F25E6B03616", "C4B16D1FA24578F7EDAEA0F0F7DEBB097E4E1FD4" }, // ea19
        { "DECFB032AD6C17BB05A8B96C80CF281C01491AF2", "DECFB032AD6C17BB05A8B96C80CF281C01491AF2" }, // ea20
        { "6801FCE8011F9F9E61C77D2201332BF112F2DEA0", "5479BDF07727F32005F4E5B3636A0A857CB0B8E2" }, // ea21
        { "A517792D58DD0993AD52ECACC11AA4530EBA489F", "D8E7331227A43CFF3EB1D65B846D43E7084C6C18" }, // ea22
        { "10C0C932FCC9B4E66F73CF5C2384691CFAB181B6", "10C0C932FCC9B4E66F73CF5C2384691CFAB181B6" }, // ea23
        { "FED12D3A2758234369B7EE7733966605657433FF", "8FE2707677715CA400F0B22BA5D4CD020CB877AF" }, // ea24
        { "2C4C4F59023AE4E64BAF71A684095BB7A4A46046", "55A032212CD79130A1BF349D917E38A6CC02B6C6" }, // eab1
        { "EA2AA334A75CBC296181D36BDAAF415517305605", "EA2AA334A75CBC296181D36BDAAF415517305605" }, // eab2
        { "4252666127D6878C19F3C878EDA0A0AA6AD8CBF8", "97137743957F90AAB538B466D00AF3B63ACCCC23" }, // eab3
        { "A1B4BB1227AF15D0F480A04C5761E9D225019AA1", "CA286D2771C4FD9E92D1CDD04BA49EFECE4CB0EB" }, // eab4
        { "386A1EF38F2B91E1D7BEBBBCB8C8A537D2463ABC", "56CD820ECA2B5CEB19784885C4BCD917C9A27FD3" }, // eab5
        { "D83B73BC83BA464378E1FDABD50B27ACA27644F9", "34EE70E2093C8CB7126753509B9FE3283318BED8" }, // eab6
        { "31EBF1F2239F60380F943FD89CE08AB36253916E", "A37BE0B0EA85EDAA541F1CCC7722C63DD1C57B3E" }, // eac1
        { "B9AB52309C6F2D41200393770D7F82BA303159E5", "D81531681A04785B72E64F0B6814F6E40AFFF423" }, // eac2
        { "DCE1726D4126FFD188285433B52C8CA7C44B3AE8", "D88A3C2A27A571F557966034245D01AEDE6DE5ED" }, // eac3
        { "EE34CEAB722694D3D976EA5AB0CA44E866118263", "D5C49D3D89EA499CA3D79004C3C044B65B6196ED" }, // eac4
        { "C329A1D3725C0C94A45F88DE530A0AE7CDCCBD52", "73B9C4D0FE9EBA5DE0336B32FE5A0932FA0F6AAC" }, // eac5
        { "06853A063C4DEA5659E920914A49F0B0AF4811D5", "289B36A2CA8D456344ECC1F0EF560E81E0F0E1EC" }, // eac6
        { "EAA0962A4E28C51A37CF923C4B27E2ECB188C368", "7093BB932C046DBE21D902F566E2FAE010A6EF58" }, // ead1
        { "F884D3BAF22433EA7F2324AE6E71B81EAD9CE43B", "4464DD9A898265E5609739BC10C7064B4B45678E" }, // ead2
        { "27CBE8904FC5733DCA5059DAA63A458A12218435", "5606182D4087530BADF998000A82E74B6558E022" }, // ead3
        { "F690C98C2BB80A500A089ABFAA56987E306F001E", "F690C98C2BB80A500A089ABFAA56987E306F001E" }, // ead4
        { "2E367250168914E1BFC7B358B277668E74403C5D", "CC72057CFB6759C9D6464EE5EDE65300AF80D002" }, // ead5
        { "BF43734674C674BA574F9208063D8A1CFFB2D40C", "FFBA2103C835EA72B2DDB02041882910001D9119" }, // ead6
        { "5976E3BD6492EDD4DE1C12C6F211585C31E3BE5E", "DBE20B972A1180D68A07B13BB4CE75EFF76275F5" }, // ead7
        { "C59CCF48E38FDA8B84D868BF5E4034B3E4E9F240", "1F1439A1A8D998B34A7F57896F5AF739AE90D64F" }, // ead8
        { "9EEF84E5187EE1939F0E4BBF3001BF684F935723", "9CC6F4107639763EBDA04BEB5A9C2D17EA0BAB33" }, // ead9
        { "9ADF4A7F425C6542FE66F99EBB1E7031A7AB9342", "F41E74D7BA8F7C60CE847F6FFEE5A52D748422C8" }, // ead10
        { "49D689606D945595BF2275720C3C61840E58C22C", "DA41AAE1A0F8F3FC6E04F4DB4B82040BD60F5C5B" }, // ead11
        { "918B0544A59224735227B763675AE44F0E35411A", "A3A325476FBCB2CB7C21ECB25FD1CB27CF9D395E" }, // ead12
        { "5AAB4CA6B7D82DA9EC4DAFA91DC1123525DF749E", "711F1AB080A2E5816F9F1D3C061C39FD370BC3DA" }, // eae1
        { "7679CFA049DC9BFA8456F3D6D5F977CF8D67C409", "E17A385E81B793CDA05830C88D6F17C25A26BBCC" }, // eae2
        { "BF6823DCA21DECA65D2C3191694AC9108B21760E", "185DA2B68A90A9D60C39C8B1EB08BE05C6AA30BF" }, // eae3
        { "A035B1528B5E8FD3AE29FC7978F95BACDBD85F37", "F15E412017ABBB43C1232B2EC994852B0A738BA2" }, // eaf1
        { "11D955C5A0C63F4FC24DE4F705EC1A6ED8253C06", "11D955C5A0C63F4FC24DE4F705EC1A6ED8253C06" }, // eaf2
        { "5BFA08E48DEA52A82EF30905C30ADC4379F9AE13", "5BFA08E48DEA52A82EF30905C30ADC4379F9AE13" }, // eaf3
        { "716B2C38B57CA40EE0EDD60B8F5397AEC10DC6FF", "E0FFC70D2A363C14165238E201559A4091586E1C" }, // eaf4
        { "6B4DD1465E6FCDCC6F67ACB3781E53F036413CE1", "6B4DD1465E6FCDCC6F67ACB3781E53F036413CE1" }, // eaf5
        { "8A7C56DE8825E5E7ED0E69CE91BFFCB445F1F66C", "8A7C56DE8825E5E7ED0E69CE91BFFCB445F1F66C" }, // eaf6
        { "E98100CA1EA6A48181B5F91CD022001F27C19CBD", "E98100CA1EA6A48181B5F91CD022001F27C19CBD" }, // eag1
        { "CCCD9EA328AEBFC2AFBE50499341968F83B74836", "CCCD9EA328AEBFC2AFBE50499341968F83B74836" }, // eag2
        { "A8F0E69FECA76E92BE77D8D10B9860A814D3FD4D", "A8F0E69FECA76E92BE77D8D10B9860A814D3FD4D" }, // eag3
        { "C64250BE7EFFE3B941D3D46623615675A5379CA6", "C64250BE7EFFE3B941D3D46623615675A5379CA6" }, // eag4
        { "F85B5E07D9CE9E8ED83E5EB75BCEA72358DECB36", "F85B5E07D9CE9E8ED83E5EB75BCEA72358DECB36" }, // eag5
        { "E69BD8E18C1060DBD78FA67380EC770F3F2A2DF7", "136CB64BEAD60252FE0260849AC6306073241FB3" }, // eag6
        { "F801E3D38EF8B230912729928AAD304C0106F9C2", "83F7648DC5FEE0FDBC06B4594CA34D96F72C3609" }, // eag7
        { "8D47D5FF2C57C91096F409C32013036EFF371C86", "094371EE11EA5CE835374D0E6348DAA6A0AC258D" }, // eag8
        { "4BE730EECA7DFA9F3273ADD86EE5594BC9D82985", "4BE730EECA7DFA9F3273ADD86EE5594BC9D82985" }, // eag9
        { "43A425E82129538995542C2F36C30959046850CD", "43A425E82129538995542C2F36C30959046850CD" }, // eah1
        { "F639A36B8FA2137544E9739725D4CB0BBBC5B8AA", "083EDDB2BBA61B3DF4D3DB0A75255EA1089DFFDA" }, // eah2
        { "4EC107B0CE241CB5F3B4E73AFA9517567654C4A6", "B0509526673AD19EB54BF31D0D471A540F758AF7" }, // eah3
        { "DAAF1BD012A8AB0FBCA3DDAE47F5690D1B0B795E", "DAAF1BD012A8AB0FBCA3DDAE47F5690D1B0B795E" }, // eah4
        { "D8F1822736E6E0B74339E87A35764A45E9435AE2", "D8F1822736E6E0B74339E87A35764A45E9435AE2" }, // eah5
        { "39B32F54B2DB0AEBA891407547F5B105F29B85A0", "39B32F54B2DB0AEBA891407547F5B105F29B85A0" }, // eah6
        { "E825668A9A0683178E6ED62A02572A2D8378AFE2", "E825668A9A0683178E6ED62A02572A2D8378AFE2" }, // secret1
        { "8F5C9273F0A79B6F4603484B6491B6EDDBAADEB0", "07D76FB52D568069EDBC146441E5BD9E11BAA76F" }, // secret2
        { "7587BBA01391FF0C197B57A0EEF42756A04C1756", "7587BBA01391FF0C197B57A0EEF42756A04C1756" }, // eay1
        { "80D33D63B0259780F80D57BD85C48F1581D4F9AD", "80D33D63B0259780F80D57BD85C48F1581D4F9AD" }, // eay2
        { "78AB406E542B721BFE668C432A58F5B3F98FF35B", "78AB406E542B721BFE668C432A58F5B3F98FF35B" }, // eay3
    };

    private const int PresentBlockID = 2264;
    private static readonly ManualLogSource logger = LoggerFactory.GetLogger(typeof(LevelApi));
    private static readonly Vector3Comparer _vector3Comparer = new();
    private static readonly IntComparer _intSequenceComparer = new();
    private static readonly FloatComparer _floatSequenceComparer = new();

    private static readonly Dictionary<string, string> uidToHash = new();

    /// <summary>
    /// The parsed version of the current level
    /// </summary>
    public static ZeepLevel CurrentZeepLevel { get; private set; }

    /// <summary>
    /// The hash of the current level
    /// </summary>
    public static string CurrentHash { get; private set; }

    /// <summary>
    /// Gets the current level that is being played
    /// </summary>
    public static LevelScriptableObject CurrentLevel => GetLevelFromLoader();

    internal static void Initialize()
    {
        SetupGame_FinishLoading.FinishLoading += FinishLoading;
    }

    private static void FinishLoading(SetupGame instance)
    {
        CurrentZeepLevel = ZeepLevelParser.Parse(instance.lines);
        CurrentHash = Hash(CurrentZeepLevel);
    }

    private static LevelScriptableObject GetLevelFromLoader()
    {
        if (PlayerManager.Instance == null)
            return null;
        if (PlayerManager.Instance.loader == null)
            return null;
        if (PlayerManager.Instance.loader.GlobalLevel == null)
            return null;
        if (PlayerManager.Instance.loader.GlobalLevel.LevelData == null ||
            PlayerManager.Instance.loader.GlobalLevel.LevelData.Length == 0)
        {
            return null;
        }

        return PlayerManager.Instance.loader.GlobalLevel;
    }

    /// <summary>
    /// Gets the hash of the current level
    /// <remarks>This is a shorthand for <see cref="GetLevelHash(LevelScriptableObject)"/> combined with <see cref="CurrentLevel"/></remarks>
    /// </summary>
    [Obsolete("Use CurrentHash instead")]
    public static string GetCurrentLevelHash()
    {
        return GetLevelHash(CurrentLevel);
    }

    /// <summary>
    /// Creates a hash that is unique to this level
    /// </summary>
    /// <param name="levelScriptableObject">The level to hash</param>
    public static string GetLevelHash(LevelScriptableObject levelScriptableObject)
    {
        ZeepLevel zeepLevel = ZeepLevelParser.Parse(levelScriptableObject.LevelData);
        return zeepLevel == null ? null : Hash(zeepLevel);
    }

    private static string Hash(ZeepLevel zeepLevel)
    {
        if (zeepLevel == null)
        {
            logger.LogWarning("Trying to hash a null level");
            return null;
        }

        StringBuilder inputBuilder = new();
        inputBuilder.AppendCLRF(zeepLevel.Skybox.ToString());
        inputBuilder.AppendCLRF(zeepLevel.Ground.ToString());

        List<ZeepBlock> orderedBlocks = zeepLevel.Blocks
            .Where(x => x.Id != PresentBlockID)
            .OrderBy(x => x.Id)
            .ThenBy(x => x.Position, _vector3Comparer)
            .ThenBy(x => x.Euler, _vector3Comparer)
            .ThenBy(x => x.Scale, _vector3Comparer)
            .ThenBy(x => x.Paints, _intSequenceComparer)
            .ThenBy(x => x.Options, _floatSequenceComparer)
            .ToList();

        foreach (ZeepBlock block in orderedBlocks)
        {
            inputBuilder.AppendCLRF(block.ToString());
        }

        byte[] hash = SHA1.Create().ComputeHash(Encoding.UTF8.GetBytes(inputBuilder.ToString()));
        StringBuilder hashBuilder = new(hash.Length * 2);

        foreach (byte b in hash)
        {
            hashBuilder.Append(b.ToString("X2"));
        }

        string levelHash = hashBuilder.ToString();
        return hashReplacements.GetValueOrDefault(levelHash, levelHash);
    }
}
