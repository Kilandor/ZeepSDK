using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

namespace ZeepSDK.SecretsGenerator;

[Generator]
public class SecretsGenerator : IIncrementalGenerator
{
    private const string SecretsSource = """
                                         // <auto-generated/>

                                         namespace ZeepSDK
                                         {
                                             internal static class Secrets
                                             {
                                                 internal static string Bugsnag = "%BUGSNAG%";
                                             }
                                         }
                                         """;
    
    
    public void Initialize(IncrementalGeneratorInitializationContext context)
    {
        var buildOptions = context.AnalyzerConfigOptionsProvider
            .Select((provider, _) =>
            {
                provider.GlobalOptions.TryGetValue(
                    "build_property.BugsnagKey", out var value);
                return value ?? "NO KEY DEFINED";
            });

        context.RegisterSourceOutput(buildOptions, Generate);
    }

    private void Generate(SourceProductionContext context, string envValue)
    {
        context.AddSource("Secrets.g.cs", SourceText.From(SecretsSource.Replace("%BUGSNAG%", envValue), Encoding.UTF8));
    }
}